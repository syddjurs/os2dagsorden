<?php

/**
 * os2dagsorden_os2dagsorden_file_conversion_manage
 *
 * PHP version 5
 *
 * @category OS2Dagsorden
 * @package  OS2Dagsorden
 * @author   Juulia Devadze <juulia@bellcom.ee>
 * @license  http://www.gnu.org/licenses/gpl-2.0.html GNU General Public License, version 2
 * @link     http://bellcom.dk
 */
// to delete
function os2dagsorden_file_conversion_manager_menu() {
    $items = array();
    $items['os2web/run_file_manager'] = array(
        'page callback' => 'os2dagsorden_file_manager',
        'access arguments' => array('administer os2web'),
        'type' => MENU_CALLBACK,
    );
    return $items;
}

function os2dagsorden_file_manager() {
    global $debug_info;
    os2dagsorden_file_conversion_manager_cron();
}

 function os2dagsorden_file_conversion_manager_form_file_conversion_settings_settings_form_alter(&$form, &$form_state) {
     
 }
/**
 * Cron implementation.
 * additionally, there should also be a cron job, which checks the mentioned directory to see if some of the files there have been conveted to pdf.
 * or example, if there is file "name1.doc" and "name1.pdf", it means that the file is converted to pdf. In this case:
 * pdf file should be copied into the initial directory, where the original .doc file is
 * reference to the file in file_managed table is updated from .doc version to .pdf version
 * both files (.doc and .pdf) are deleted from the convertion directory.
 * Also calls function to update meeting status.
 *
 * @return none
 */
function os2dagsorden_file_conversion_manager_cron() {
    $convertion_dir_path = drupal_realpath(variable_get('os2web_convertion_dir'));
    $converted_files = Array();
    if ($pdf_files = glob($convertion_dir_path . '/*.{pdf, PDF}', GLOB_BRACE)) {
        foreach ($pdf_files as $file) {
            $pdf_path_parts = pathinfo($file);
            foreach (glob($convertion_dir_path . '/' . $pdf_path_parts['filename'] . '.*') as $original_file) {
                if ($original_file == $file)                     continue;
                $original_file_parts = pathinfo($original_file);
                $converted_files[] = array('pdf' => $pdf_path_parts['basename'], 'original' => $original_file_parts['basename']);
            }
        }
    }
    foreach ($converted_files as $file_arr) {
        $original_filename = array_pop(explode('_', $file_arr['original']));
        $pdf_filename = array_pop(explode('_', $file_arr['pdf']));
        $query = db_query('SELECT f.fid, f.uri
             FROM {file_managed} f
             WHERE f.filename = :filename
             ', array(':filename' => $original_filename)
        );
        $d_file = $query->fetchAssoc();

        if ($d_file) {
            $original_path_parts = pathinfo($d_file['uri']);
            $dest = drupal_realpath($original_path_parts['dirname'] . '/' . $pdf_filename);
            $uri = $original_path_parts['dirname'] . '/' . $pdf_filename;
            if (copy(drupal_realpath(variable_get('os2web_convertion_dir')) . "/" . $file_arr['pdf'], $dest)) {
                $uri_exists = db_query('SELECT count(*)
                        FROM {file_managed} f
                        WHERE f.uri = :uri
                        ', array(':uri' => $uri))
                                   ->fetchField();
               if ($uri_exists) {
                    watchdog('file convertion managmnet:', 'Ignore file %file. Url exists %uri.', array('%file' => $pdf_filename, '%uri' => $dest), WATCHDOG_WARNING);
                    continue;
                }
              
                db_update('file_managed')
                        ->fields(array(
                            'uri' => $uri,
                            'filename' => $pdf_filename,
                            'timestamp' => time(),
                            'filesize' => filesize($dest),
                            'filemime' => mime_content_type($dest)
                        ))
                        ->condition('fid', $d_file['fid'])
                        ->execute();

                unlink(drupal_realpath(variable_get('os2web_convertion_dir')) . "/" . $file_arr['pdf']);
                unlink(drupal_realpath(variable_get('os2web_convertion_dir')) . "/" . $file_arr['original']);
            }
        }
    }
    drupal_flush_all_caches();
}

function _os2dagsorden_file_conversion_manager_copy_file_to_convertion_dir($filename){ 
   $filename_parts = pathinfo($filename);
   $type_arr=  explode(',', variable_get('os2web_copied_filetype'));
   $pdf_path = $filename_parts['dirname'] . '/' . $filename_parts['filename'] . '.PDF';
   $dir_parts=  explode('/', $filename_parts['dirname']);
   if(_os2dagsorden_file_conversion_manager_similar_file_exists(drupal_realpath($pdf_path))) return;
   if (in_array(strtolower($filename_parts['extension']),array_map('strtolower',$type_arr))){
      $convertion_dir_path=drupal_realpath(variable_get('os2web_convertion_dir'));
      if (!_os2dagsorden_file_conversion_manager_similar_file_exists( $convertion_dir_path. '/' .  $filename_parts['basename']))
         copy(drupal_realpath($filename), $convertion_dir_path. '/' . array_pop($dir_parts).'_'.$filename_parts['basename']);
   }
  }
  
  function _os2dagsorden_file_conversion_manager_similar_file_exists($filename) {
  if (file_exists($filename)) {
    return $filename;
  }
  $lcase_filename = strtolower($filename);
  if (!empty($lcase_filename)){
    foreach (glob(dirname($filename) . '/*') as $file) {
      if (strtolower($file) == $lcase_filename) {
	return $file;
      }
    }
  }
  return FALSE;
}